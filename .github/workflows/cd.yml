name: CD

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read
  issues: read

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            archive_ext: .tar.gz
          - os: windows-latest
            goos: windows
            goarch: amd64
            archive_ext: .zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev
        shell: bash

      - name: Install CMDs
        run: |
          make install-all-go-cmds
        shell: bash

      - name: Build and Package
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: make package
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bookxnote-local-ocr-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/bookxnote-local-ocr-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.archive_ext }}

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    env:
      DOWNLOADED_PATH: ${{ github.workspace }}/pre_build_artifacts

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.DOWNLOADED_PATH }}

      - name: Ensure downloaded files
        run: ls -R ${{ env.DOWNLOADED_PATH }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.DOWNLOADED_PATH }}/**/*
          body_path: ${{ github.workspace }}/.github/release-note.md
          draft: true
          generate_release_notes: true
