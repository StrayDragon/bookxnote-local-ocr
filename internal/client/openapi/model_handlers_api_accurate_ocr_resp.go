/*
BookxNote Local OCR API

This is a local OCR service for BookxNote that mimics Baidu OCR API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HandlersAPIAccurateOCRResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlersAPIAccurateOCRResp{}

// HandlersAPIAccurateOCRResp struct for HandlersAPIAccurateOCRResp
type HandlersAPIAccurateOCRResp struct {
	Direction *int32 `json:"direction,omitempty"`
	LogId *int32 `json:"log_id,omitempty"`
	WordsResult []HandlersAPIAccurateOCRRespWordResult `json:"words_result,omitempty"`
	WordsResultNum *int32 `json:"words_result_num,omitempty"`
	XBackend *string `json:"x_backend,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HandlersAPIAccurateOCRResp HandlersAPIAccurateOCRResp

// NewHandlersAPIAccurateOCRResp instantiates a new HandlersAPIAccurateOCRResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlersAPIAccurateOCRResp() *HandlersAPIAccurateOCRResp {
	this := HandlersAPIAccurateOCRResp{}
	return &this
}

// NewHandlersAPIAccurateOCRRespWithDefaults instantiates a new HandlersAPIAccurateOCRResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlersAPIAccurateOCRRespWithDefaults() *HandlersAPIAccurateOCRResp {
	this := HandlersAPIAccurateOCRResp{}
	return &this
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *HandlersAPIAccurateOCRResp) GetDirection() int32 {
	if o == nil || IsNil(o.Direction) {
		var ret int32
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersAPIAccurateOCRResp) GetDirectionOk() (*int32, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *HandlersAPIAccurateOCRResp) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given int32 and assigns it to the Direction field.
func (o *HandlersAPIAccurateOCRResp) SetDirection(v int32) {
	o.Direction = &v
}

// GetLogId returns the LogId field value if set, zero value otherwise.
func (o *HandlersAPIAccurateOCRResp) GetLogId() int32 {
	if o == nil || IsNil(o.LogId) {
		var ret int32
		return ret
	}
	return *o.LogId
}

// GetLogIdOk returns a tuple with the LogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersAPIAccurateOCRResp) GetLogIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LogId) {
		return nil, false
	}
	return o.LogId, true
}

// HasLogId returns a boolean if a field has been set.
func (o *HandlersAPIAccurateOCRResp) HasLogId() bool {
	if o != nil && !IsNil(o.LogId) {
		return true
	}

	return false
}

// SetLogId gets a reference to the given int32 and assigns it to the LogId field.
func (o *HandlersAPIAccurateOCRResp) SetLogId(v int32) {
	o.LogId = &v
}

// GetWordsResult returns the WordsResult field value if set, zero value otherwise.
func (o *HandlersAPIAccurateOCRResp) GetWordsResult() []HandlersAPIAccurateOCRRespWordResult {
	if o == nil || IsNil(o.WordsResult) {
		var ret []HandlersAPIAccurateOCRRespWordResult
		return ret
	}
	return o.WordsResult
}

// GetWordsResultOk returns a tuple with the WordsResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersAPIAccurateOCRResp) GetWordsResultOk() ([]HandlersAPIAccurateOCRRespWordResult, bool) {
	if o == nil || IsNil(o.WordsResult) {
		return nil, false
	}
	return o.WordsResult, true
}

// HasWordsResult returns a boolean if a field has been set.
func (o *HandlersAPIAccurateOCRResp) HasWordsResult() bool {
	if o != nil && !IsNil(o.WordsResult) {
		return true
	}

	return false
}

// SetWordsResult gets a reference to the given []HandlersAPIAccurateOCRRespWordResult and assigns it to the WordsResult field.
func (o *HandlersAPIAccurateOCRResp) SetWordsResult(v []HandlersAPIAccurateOCRRespWordResult) {
	o.WordsResult = v
}

// GetWordsResultNum returns the WordsResultNum field value if set, zero value otherwise.
func (o *HandlersAPIAccurateOCRResp) GetWordsResultNum() int32 {
	if o == nil || IsNil(o.WordsResultNum) {
		var ret int32
		return ret
	}
	return *o.WordsResultNum
}

// GetWordsResultNumOk returns a tuple with the WordsResultNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersAPIAccurateOCRResp) GetWordsResultNumOk() (*int32, bool) {
	if o == nil || IsNil(o.WordsResultNum) {
		return nil, false
	}
	return o.WordsResultNum, true
}

// HasWordsResultNum returns a boolean if a field has been set.
func (o *HandlersAPIAccurateOCRResp) HasWordsResultNum() bool {
	if o != nil && !IsNil(o.WordsResultNum) {
		return true
	}

	return false
}

// SetWordsResultNum gets a reference to the given int32 and assigns it to the WordsResultNum field.
func (o *HandlersAPIAccurateOCRResp) SetWordsResultNum(v int32) {
	o.WordsResultNum = &v
}

// GetXBackend returns the XBackend field value if set, zero value otherwise.
func (o *HandlersAPIAccurateOCRResp) GetXBackend() string {
	if o == nil || IsNil(o.XBackend) {
		var ret string
		return ret
	}
	return *o.XBackend
}

// GetXBackendOk returns a tuple with the XBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersAPIAccurateOCRResp) GetXBackendOk() (*string, bool) {
	if o == nil || IsNil(o.XBackend) {
		return nil, false
	}
	return o.XBackend, true
}

// HasXBackend returns a boolean if a field has been set.
func (o *HandlersAPIAccurateOCRResp) HasXBackend() bool {
	if o != nil && !IsNil(o.XBackend) {
		return true
	}

	return false
}

// SetXBackend gets a reference to the given string and assigns it to the XBackend field.
func (o *HandlersAPIAccurateOCRResp) SetXBackend(v string) {
	o.XBackend = &v
}

func (o HandlersAPIAccurateOCRResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlersAPIAccurateOCRResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.LogId) {
		toSerialize["log_id"] = o.LogId
	}
	if !IsNil(o.WordsResult) {
		toSerialize["words_result"] = o.WordsResult
	}
	if !IsNil(o.WordsResultNum) {
		toSerialize["words_result_num"] = o.WordsResultNum
	}
	if !IsNil(o.XBackend) {
		toSerialize["x_backend"] = o.XBackend
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HandlersAPIAccurateOCRResp) UnmarshalJSON(data []byte) (err error) {
	varHandlersAPIAccurateOCRResp := _HandlersAPIAccurateOCRResp{}

	err = json.Unmarshal(data, &varHandlersAPIAccurateOCRResp)

	if err != nil {
		return err
	}

	*o = HandlersAPIAccurateOCRResp(varHandlersAPIAccurateOCRResp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "direction")
		delete(additionalProperties, "log_id")
		delete(additionalProperties, "words_result")
		delete(additionalProperties, "words_result_num")
		delete(additionalProperties, "x_backend")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHandlersAPIAccurateOCRResp struct {
	value *HandlersAPIAccurateOCRResp
	isSet bool
}

func (v NullableHandlersAPIAccurateOCRResp) Get() *HandlersAPIAccurateOCRResp {
	return v.value
}

func (v *NullableHandlersAPIAccurateOCRResp) Set(val *HandlersAPIAccurateOCRResp) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlersAPIAccurateOCRResp) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlersAPIAccurateOCRResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlersAPIAccurateOCRResp(val *HandlersAPIAccurateOCRResp) *NullableHandlersAPIAccurateOCRResp {
	return &NullableHandlersAPIAccurateOCRResp{value: val, isSet: true}
}

func (v NullableHandlersAPIAccurateOCRResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlersAPIAccurateOCRResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


