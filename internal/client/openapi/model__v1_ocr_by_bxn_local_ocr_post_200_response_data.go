/*
BookxNote Local OCR API

BookxNote 本地 OCR 服务 API 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1OcrByBxnLocalOcrPost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1OcrByBxnLocalOcrPost200ResponseData{}

// V1OcrByBxnLocalOcrPost200ResponseData struct for V1OcrByBxnLocalOcrPost200ResponseData
type V1OcrByBxnLocalOcrPost200ResponseData struct {
	// 识别出的文本内容
	Text *string `json:"text,omitempty"`
	// 识别结果的置信度 (0-1)
	Confidence *float32 `json:"confidence,omitempty"`
	// OCR处理耗时(秒)
	TimeCost *float32 `json:"time_cost,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1OcrByBxnLocalOcrPost200ResponseData V1OcrByBxnLocalOcrPost200ResponseData

// NewV1OcrByBxnLocalOcrPost200ResponseData instantiates a new V1OcrByBxnLocalOcrPost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1OcrByBxnLocalOcrPost200ResponseData() *V1OcrByBxnLocalOcrPost200ResponseData {
	this := V1OcrByBxnLocalOcrPost200ResponseData{}
	return &this
}

// NewV1OcrByBxnLocalOcrPost200ResponseDataWithDefaults instantiates a new V1OcrByBxnLocalOcrPost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1OcrByBxnLocalOcrPost200ResponseDataWithDefaults() *V1OcrByBxnLocalOcrPost200ResponseData {
	this := V1OcrByBxnLocalOcrPost200ResponseData{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) SetText(v string) {
	o.Text = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetConfidence() float32 {
	if o == nil || IsNil(o.Confidence) {
		var ret float32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetConfidenceOk() (*float32, bool) {
	if o == nil || IsNil(o.Confidence) {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) HasConfidence() bool {
	if o != nil && !IsNil(o.Confidence) {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given float32 and assigns it to the Confidence field.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) SetConfidence(v float32) {
	o.Confidence = &v
}

// GetTimeCost returns the TimeCost field value if set, zero value otherwise.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetTimeCost() float32 {
	if o == nil || IsNil(o.TimeCost) {
		var ret float32
		return ret
	}
	return *o.TimeCost
}

// GetTimeCostOk returns a tuple with the TimeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) GetTimeCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeCost) {
		return nil, false
	}
	return o.TimeCost, true
}

// HasTimeCost returns a boolean if a field has been set.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) HasTimeCost() bool {
	if o != nil && !IsNil(o.TimeCost) {
		return true
	}

	return false
}

// SetTimeCost gets a reference to the given float32 and assigns it to the TimeCost field.
func (o *V1OcrByBxnLocalOcrPost200ResponseData) SetTimeCost(v float32) {
	o.TimeCost = &v
}

func (o V1OcrByBxnLocalOcrPost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1OcrByBxnLocalOcrPost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Confidence) {
		toSerialize["confidence"] = o.Confidence
	}
	if !IsNil(o.TimeCost) {
		toSerialize["time_cost"] = o.TimeCost
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1OcrByBxnLocalOcrPost200ResponseData) UnmarshalJSON(data []byte) (err error) {
	varV1OcrByBxnLocalOcrPost200ResponseData := _V1OcrByBxnLocalOcrPost200ResponseData{}

	err = json.Unmarshal(data, &varV1OcrByBxnLocalOcrPost200ResponseData)

	if err != nil {
		return err
	}

	*o = V1OcrByBxnLocalOcrPost200ResponseData(varV1OcrByBxnLocalOcrPost200ResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "text")
		delete(additionalProperties, "confidence")
		delete(additionalProperties, "time_cost")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1OcrByBxnLocalOcrPost200ResponseData struct {
	value *V1OcrByBxnLocalOcrPost200ResponseData
	isSet bool
}

func (v NullableV1OcrByBxnLocalOcrPost200ResponseData) Get() *V1OcrByBxnLocalOcrPost200ResponseData {
	return v.value
}

func (v *NullableV1OcrByBxnLocalOcrPost200ResponseData) Set(val *V1OcrByBxnLocalOcrPost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableV1OcrByBxnLocalOcrPost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableV1OcrByBxnLocalOcrPost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1OcrByBxnLocalOcrPost200ResponseData(val *V1OcrByBxnLocalOcrPost200ResponseData) *NullableV1OcrByBxnLocalOcrPost200ResponseData {
	return &NullableV1OcrByBxnLocalOcrPost200ResponseData{value: val, isSet: true}
}

func (v NullableV1OcrByBxnLocalOcrPost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1OcrByBxnLocalOcrPost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


